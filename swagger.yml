# openapi-generator-cli generate -g ruby-on-rails -i swagger.yml -o ./rails_codes -t ruby-on-rails-server
openapi: 3.0.0
info:
  title: Report Generator API
  version: 1.0.0
paths:
  /users:
    post:
      summary: Create a new user
      tags:
      - users
      responses:
        '200':
          description: ユーザー一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
  /sessions:
    post:
      summary: Create a new session
      tags:
      - sessions
      operationId: createSession
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ユーザー一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a session
      tags:
      - sessions
      operationId: deleteSession
      responses:
        '204':
          description: No Content
  /reports:
    get:
      summary: get reports list
      tags:
      - reports
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
              
    post:
      summary: Create a new report
      tags:
      - reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                paragraphs:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      content:
                        type: string
              required:
                - title
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  ttEdited:
                    type: string
                    format: date-time
                  paragraphs:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        content:
                          type: string
  /reports/{id}:
    get:
      summary: Get a report by ID
      tags:
      - reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 特定のレポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
  /paragraphs:
    post:
      summary: Create a new paragraph
      tags:
      - paragraphs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/Paragraph/properties/title'
                content:
                  $ref: '#/components/schemas/Paragraph/properties/content'
              required:
                - title
                - content
      responses:
        '200':
          description: 段落を追加
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paragraph'
  /paragraphs/{id}:
    patch:
      summary: Update a paragraph
      tags:
      - paragraphs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paragraph'
    delete:
      summary: Delete a paragraph
      tags:
      - paragraphs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        cognito_sub:
          type: string
        username:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Report:
      type: object
      properties:
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        paragraphs:
          $ref: '#/components/schemas/Paragraph'
    Reports:
      type: array
      items:
        $ref: '#/components/schemas/Report'
    Paragraph:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        order_number:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
