# openapi-generator-cli generate -g ruby-on-rails -i swagger.yml -o ./output_dir -t ruby-on-rails-server
openapi: 3.0.0
info:
  title: Report Generator API
  version: 1.0.0
paths:
  /users:
    post:
      summary: Create a new user
      tags:
      - users
      description: uuidでサーバーに投げて、サーバーでデコード、cookieにuser_idとuser_nameを入れてレスポンス。従ってレスポンスにuuidは存在しない
      requestBody:
        description: Request body for adding a new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProperties'
      responses:
        '200':
          description: ユーザーを作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
      security:
        - bearerAuth: []
  /sessions:
    post:
      summary: Create a new session
      tags:
      - sessions
      requestBody:
        description: 新しいユーザーを追加するためのリクエストボディ
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cognito_sub:
                  $ref: '#/components/schemas/UserProperties/properties/cognito_sub'
      operationId: createSession
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ログイン完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
    delete:
      summary: Delete a session
      tags:
      - sessions
      operationId: deleteSession
      responses:
        '204':
          description: No Content
  /reports:
    get:
      summary: get reports list
      tags:
      - reports
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportProperties'
              
    post:
      summary: Create a new report
      tags:
      - reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportProperties'
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportProperties'
  /reports/{id}:
    get:
      summary: Get a report by ID
      tags:
      - reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 特定のレポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportProperties'
  /paragraphs:
    post:
      summary: Create a new paragraph
      tags:
      - paragraphs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_id:
                  type: string
                  format: uuid
                  writeOnly: true
                title:
                  $ref: '#/components/schemas/ParagraphProperties/properties/title'
                content:
                  $ref: '#/components/schemas/ParagraphProperties/properties/content'
              required:
                - report_id
                - title
                - content
      responses:
        '200':
          description: 段落を追加
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParagraphProperties'
  /paragraphs/{id}:
    patch:
      summary: Update a paragraph
      tags:
      - paragraphs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
      responses:
        '200':
          description: レポート一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParagraphProperties'
    delete:
      summary: Delete a paragraph
      tags:
      - paragraphs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserProperties:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        cognito_sub:
          type: string
          writeOnly: true
        username:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    ReportProperties:
      type: object
      properties:
        id:
          type:  string
          format: uuid
          readOnly: true
        user_id:
          type:  string
          format: uuid
          writeOnly: true
        title:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        paragraphs:
          type: array
          items:
            $ref: '#/components/schemas/ParagraphProperties'
    ParagraphProperties:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title:
          type: string
        content:
          type: string
        order_number:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
